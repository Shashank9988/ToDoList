{"version":3,"sources":["logo.svg","Components/ToDoApp.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoApp","props","useState","inputList","setInputList","Items","setItems","count","countupdate","className","type","placeholder","value","onChange","event","target","onClick","alert","oldItems","oldCount","id","map","ItemVal","App","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAAe,I,kCCiEAA,MA/Df,SAAiBC,GACb,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA6BJ,mBAAS,GAAtC,mBAAOK,EAAP,KAAcC,EAAd,KAuBA,OACG,qBAAKC,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACK,oBAAIA,UAAU,MAAd,4BAGA,+BACI,uBAAOA,UAAU,QAAQC,KAAK,OAAOC,YAAY,wBAAwBC,MAAOT,EAAWU,SAxBzF,SAACC,GACfV,EAAaU,EAAMC,OAAOH,YA2BlB,wBAAQH,UAAU,MAAMO,QAxBnB,WACb,GAAe,KAAZb,EAGC,OADAc,MAAM,qBACC,EAEXX,GAAS,SAACY,GACN,MAAM,GAAN,mBAAWA,GAAX,CAAqBf,OAfzBK,GAAY,SAACW,GACT,OAAOA,EAAS,KAiBtBf,EAAa,KAcH,eAGA,qBAAIK,UAAU,YAAd,yBAEgB,oBAAIW,GAAG,MAAP,SAAcb,OAG9B,6BAEQF,EAAMgB,KAAM,SAACC,GACT,OAAO,oBAAIb,UAAU,QAAd,SAAuBa,eCtC3CC,MARf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,cAAC,EAAD,CAASe,MAAM,cCKNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d6d3891a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState } from 'react';\r\nimport './FirComp.css'\r\nfunction ToDoApp(props) {\r\n    const [inputList, setInputList] = useState(\"\");\r\n    const [Items, setItems] = useState([]);\r\n    const [count, countupdate] = useState(0);\r\n    const counter =()=>{\r\n        countupdate((oldCount)=>{\r\n            return oldCount+1;\r\n        })\r\n    }\r\n    const ItemEvent = (event) =>{\r\n        setInputList(event.target.value);\r\n       \r\n    }\r\n    const listItems =()=>{\r\n        if(inputList===\"\")\r\n        {\r\n            alert(\"Enter valid value\");\r\n            return 0;\r\n        }\r\n        setItems((oldItems)=>{\r\n            return [...oldItems, inputList];\r\n        })\r\n        counter();\r\n      setInputList(\"\");\r\n        \r\n    }\r\n    return (\r\n       <div className=\"main_div\">\r\n           <div className=\"second_div\">\r\n                <h2 className=\"h2_\">\r\n                    To Do List App\r\n                </h2>\r\n                <form>\r\n                    <input className=\"form_\" type=\"text\" placeholder=\"Enter the item to add\" value={inputList} onChange={ItemEvent}>\r\n                    </input>\r\n                    \r\n                </form>\r\n                <button className=\"btn\" onClick={listItems}>\r\n                    +\r\n                </button>\r\n                <h2 className=\"h2_second\">\r\n                    \r\n                    Items added <h4 id=\"id1\">{count}</h4>\r\n\r\n                </h2>\r\n                <ol >\r\n                    {\r\n                        Items.map ( (ItemVal) =>{\r\n                            return <li className=\"list_\">{ItemVal}</li>;\r\n                           \r\n                        })\r\n\r\n\r\n                    }\r\n                </ol>\r\n        \r\n\r\n\r\n               \r\n           </div>\r\n       </div>     \r\n    );\r\n}\r\nexport default ToDoApp;","import logo from './logo.svg';\nimport './App.css';\nimport ToDoApp from './Components/ToDoApp'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToDoApp title=\"My Pro\"></ToDoApp>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}